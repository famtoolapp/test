// Generated by view binder compiler. Do not edit!
package com.safe.setting.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.safe.setting.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainChildBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RelativeLayout btnAddWhitelist;

  @NonNull
  public final RelativeLayout btnAppNotificationSettings;

  @NonNull
  public final RelativeLayout btnEnableOverdraw;

  @NonNull
  public final RelativeLayout btnEnableService;

  @NonNull
  public final RelativeLayout btnEnableServiceNotification;

  @NonNull
  public final Button btnHideApp;

  @NonNull
  public final RelativeLayout btnPlaystoreNotificationSettings;

  @NonNull
  public final ImageView iconAppNotification;

  @NonNull
  public final ImageView iconNotification;

  @NonNull
  public final ImageView iconOverdraw;

  @NonNull
  public final ImageView iconPlaystoreNotification;

  @NonNull
  public final ImageView iconService;

  @NonNull
  public final ImageView iconWhitelist;

  @NonNull
  public final LinearLayout linearlayout;

  @NonNull
  public final SwitchCompat switchAccessibility;

  @NonNull
  public final SwitchCompat switchAddWhitelist;

  @NonNull
  public final SwitchCompat switchAppNotification;

  @NonNull
  public final SwitchCompat switchNotification;

  @NonNull
  public final SwitchCompat switchOverdraw;

  @NonNull
  public final SwitchCompat switchPlaystoreNotification;

  @NonNull
  public final TextView tvChildSubtitle;

  @NonNull
  public final TextView tvChildTitle;

  private ActivityMainChildBinding(@NonNull ConstraintLayout rootView,
      @NonNull RelativeLayout btnAddWhitelist, @NonNull RelativeLayout btnAppNotificationSettings,
      @NonNull RelativeLayout btnEnableOverdraw, @NonNull RelativeLayout btnEnableService,
      @NonNull RelativeLayout btnEnableServiceNotification, @NonNull Button btnHideApp,
      @NonNull RelativeLayout btnPlaystoreNotificationSettings,
      @NonNull ImageView iconAppNotification, @NonNull ImageView iconNotification,
      @NonNull ImageView iconOverdraw, @NonNull ImageView iconPlaystoreNotification,
      @NonNull ImageView iconService, @NonNull ImageView iconWhitelist,
      @NonNull LinearLayout linearlayout, @NonNull SwitchCompat switchAccessibility,
      @NonNull SwitchCompat switchAddWhitelist, @NonNull SwitchCompat switchAppNotification,
      @NonNull SwitchCompat switchNotification, @NonNull SwitchCompat switchOverdraw,
      @NonNull SwitchCompat switchPlaystoreNotification, @NonNull TextView tvChildSubtitle,
      @NonNull TextView tvChildTitle) {
    this.rootView = rootView;
    this.btnAddWhitelist = btnAddWhitelist;
    this.btnAppNotificationSettings = btnAppNotificationSettings;
    this.btnEnableOverdraw = btnEnableOverdraw;
    this.btnEnableService = btnEnableService;
    this.btnEnableServiceNotification = btnEnableServiceNotification;
    this.btnHideApp = btnHideApp;
    this.btnPlaystoreNotificationSettings = btnPlaystoreNotificationSettings;
    this.iconAppNotification = iconAppNotification;
    this.iconNotification = iconNotification;
    this.iconOverdraw = iconOverdraw;
    this.iconPlaystoreNotification = iconPlaystoreNotification;
    this.iconService = iconService;
    this.iconWhitelist = iconWhitelist;
    this.linearlayout = linearlayout;
    this.switchAccessibility = switchAccessibility;
    this.switchAddWhitelist = switchAddWhitelist;
    this.switchAppNotification = switchAppNotification;
    this.switchNotification = switchNotification;
    this.switchOverdraw = switchOverdraw;
    this.switchPlaystoreNotification = switchPlaystoreNotification;
    this.tvChildSubtitle = tvChildSubtitle;
    this.tvChildTitle = tvChildTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainChildBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainChildBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main_child, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainChildBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_whitelist;
      RelativeLayout btnAddWhitelist = ViewBindings.findChildViewById(rootView, id);
      if (btnAddWhitelist == null) {
        break missingId;
      }

      id = R.id.btn_app_notification_settings;
      RelativeLayout btnAppNotificationSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnAppNotificationSettings == null) {
        break missingId;
      }

      id = R.id.btn_enable_overdraw;
      RelativeLayout btnEnableOverdraw = ViewBindings.findChildViewById(rootView, id);
      if (btnEnableOverdraw == null) {
        break missingId;
      }

      id = R.id.btn_enable_service;
      RelativeLayout btnEnableService = ViewBindings.findChildViewById(rootView, id);
      if (btnEnableService == null) {
        break missingId;
      }

      id = R.id.btn_enable_service_notification;
      RelativeLayout btnEnableServiceNotification = ViewBindings.findChildViewById(rootView, id);
      if (btnEnableServiceNotification == null) {
        break missingId;
      }

      id = R.id.btn_hide_app;
      Button btnHideApp = ViewBindings.findChildViewById(rootView, id);
      if (btnHideApp == null) {
        break missingId;
      }

      id = R.id.btn_playstore_notification_settings;
      RelativeLayout btnPlaystoreNotificationSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnPlaystoreNotificationSettings == null) {
        break missingId;
      }

      id = R.id.icon_app_notification;
      ImageView iconAppNotification = ViewBindings.findChildViewById(rootView, id);
      if (iconAppNotification == null) {
        break missingId;
      }

      id = R.id.icon_notification;
      ImageView iconNotification = ViewBindings.findChildViewById(rootView, id);
      if (iconNotification == null) {
        break missingId;
      }

      id = R.id.icon_overdraw;
      ImageView iconOverdraw = ViewBindings.findChildViewById(rootView, id);
      if (iconOverdraw == null) {
        break missingId;
      }

      id = R.id.icon_playstore_notification;
      ImageView iconPlaystoreNotification = ViewBindings.findChildViewById(rootView, id);
      if (iconPlaystoreNotification == null) {
        break missingId;
      }

      id = R.id.icon_service;
      ImageView iconService = ViewBindings.findChildViewById(rootView, id);
      if (iconService == null) {
        break missingId;
      }

      id = R.id.icon_whitelist;
      ImageView iconWhitelist = ViewBindings.findChildViewById(rootView, id);
      if (iconWhitelist == null) {
        break missingId;
      }

      id = R.id.linearlayout;
      LinearLayout linearlayout = ViewBindings.findChildViewById(rootView, id);
      if (linearlayout == null) {
        break missingId;
      }

      id = R.id.switch_accessibility;
      SwitchCompat switchAccessibility = ViewBindings.findChildViewById(rootView, id);
      if (switchAccessibility == null) {
        break missingId;
      }

      id = R.id.switch_add_whitelist;
      SwitchCompat switchAddWhitelist = ViewBindings.findChildViewById(rootView, id);
      if (switchAddWhitelist == null) {
        break missingId;
      }

      id = R.id.switch_app_notification;
      SwitchCompat switchAppNotification = ViewBindings.findChildViewById(rootView, id);
      if (switchAppNotification == null) {
        break missingId;
      }

      id = R.id.switch_notification;
      SwitchCompat switchNotification = ViewBindings.findChildViewById(rootView, id);
      if (switchNotification == null) {
        break missingId;
      }

      id = R.id.switch_overdraw;
      SwitchCompat switchOverdraw = ViewBindings.findChildViewById(rootView, id);
      if (switchOverdraw == null) {
        break missingId;
      }

      id = R.id.switch_playstore_notification;
      SwitchCompat switchPlaystoreNotification = ViewBindings.findChildViewById(rootView, id);
      if (switchPlaystoreNotification == null) {
        break missingId;
      }

      id = R.id.tv_child_subtitle;
      TextView tvChildSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (tvChildSubtitle == null) {
        break missingId;
      }

      id = R.id.tv_child_title;
      TextView tvChildTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvChildTitle == null) {
        break missingId;
      }

      return new ActivityMainChildBinding((ConstraintLayout) rootView, btnAddWhitelist,
          btnAppNotificationSettings, btnEnableOverdraw, btnEnableService,
          btnEnableServiceNotification, btnHideApp, btnPlaystoreNotificationSettings,
          iconAppNotification, iconNotification, iconOverdraw, iconPlaystoreNotification,
          iconService, iconWhitelist, linearlayout, switchAccessibility, switchAddWhitelist,
          switchAppNotification, switchNotification, switchOverdraw, switchPlaystoreNotification,
          tvChildSubtitle, tvChildTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
